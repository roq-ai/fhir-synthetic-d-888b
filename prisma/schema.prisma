generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model admin_portal {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id       String   @db.Uuid
  last_login    DateTime @db.Timestamp(6)
  login_count   Int
  last_activity DateTime @db.Timestamp(6)
  active_status Boolean
  created_at    DateTime @default(now()) @db.Timestamp(6)
  updated_at    DateTime @default(now()) @db.Timestamp(6)
  user          user     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model health_data {
  id                 String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  patient_id         String   @db.Uuid
  height             Int
  weight             Int
  blood_type         String   @db.VarChar(255)
  medical_conditions String   @db.VarChar(255)
  created_at         DateTime @default(now()) @db.Timestamp(6)
  updated_at         DateTime @default(now()) @db.Timestamp(6)
  patient            patient  @relation(fields: [patient_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model patient {
  id            String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  first_name    String        @db.VarChar(255)
  last_name     String        @db.VarChar(255)
  date_of_birth DateTime      @db.Date
  gender        String        @db.VarChar(255)
  user_id       String        @db.Uuid
  created_at    DateTime      @default(now()) @db.Timestamp(6)
  updated_at    DateTime      @default(now()) @db.Timestamp(6)
  health_data   health_data[]
  user          user          @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model patient_portal {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id       String   @db.Uuid
  last_login    DateTime @db.Timestamp(6)
  login_count   Int
  last_activity DateTime @db.Timestamp(6)
  active_status Boolean
  created_at    DateTime @default(now()) @db.Timestamp(6)
  updated_at    DateTime @default(now()) @db.Timestamp(6)
  user          user     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model provider {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id             String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email          String           @unique @db.VarChar(255)
  firstName      String?          @db.VarChar(255)
  lastName       String?          @db.VarChar(255)
  roq_user_id    String           @db.VarChar(255)
  tenant_id      String           @db.VarChar(255)
  created_at     DateTime         @default(now()) @db.Timestamp(6)
  updated_at     DateTime         @default(now()) @db.Timestamp(6)
  admin_portal   admin_portal[]
  patient        patient[]
  patient_portal patient_portal[]
  provider       provider[]
}
